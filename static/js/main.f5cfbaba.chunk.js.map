{"version":3,"sources":["components/Shape.js","constants/object.js","utils/sceneController.js","constants/arrays.js","utils/svg.js","components/Scene.js","constants/songs.js","utils/googleApi.js","constants/string.js","utils/musicPlayer.js","utils/emotionAnalyzer.js","components/Subtitle.js","index.js"],"names":["Shape","shape","rotation","position","color","opacity","index","mesh","interpolate","x","y","z","meshPhongMaterial","attach","side","THREE","depthWrite","transparent","args","emotions","happy","sad","angry","surprise","calm","anticipated","sceneController","this","pageDispatcher","dispatcher","page","colors","paths","map","name","url","Promise","resolve","loader","load","shapes","flatten","group","toShapes","Scene","useState","setPage","setShapes","SceneController","setPageDispatcher","useEffect","then","useSpring","transitions","useTransition","item","uuid","from","Math","PI","enter","leave","order","trail","lazy","scale","degToRad","depthTest","key","props","sentences","content","length","emotionApiUrl","text","process","entityApiUrl","requestGoogleNlpApi","mode","a","fetch","response","json","console","log","musicPlayer","sentencesHand","songIndex","emotionsOfSongs","subtitleDispatcher","join","Songs","flattenSentences","playInterval","score","emotion","getEmotion","setTimeout","playIntervalCallback","researchEmotion","Subtitle","subtitle","setSubtitle","setSubTitleDispatcher","ReactDOM","render","play","concurrent","camera","fov","near","far","intensity","document","getElementById"],"mappings":"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","file":"static/js/main.f5cfbaba.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport React from \"react\";\nimport { animated as a } from \"react-spring/three\";\n\nfunction Shape({ shape, rotation, position, color, opacity, index }) {\n  return (\n    <a.mesh\n      rotation={rotation}\n      position={position.interpolate((x, y, z) => [x, y, z + -index * 50])}\n    >\n      <a.meshPhongMaterial\n        attach=\"material\"\n        color={color}\n        opacity={opacity}\n        side={THREE.DoubleSide}\n        depthWrite={false}\n        transparent\n      />\n      <shapeBufferGeometry attach=\"geometry\" args={[shape]} />\n    </a.mesh>\n  );\n}\n\nexport default Shape;\n","export const emotions = {\n  happy: 0,\n  sad: 1,\n  angry: 2,\n  surprise: 3,\n  calm: 4,\n  anticipated: 5\n};\n","import { emotions } from \"../constants/object\";\n\nclass SceneController {\n  constructor() {\n    this.pageDispatcher = null;\n  }\n\n  setPageDispatcher(dispatcher) {\n    this.pageDispatcher = dispatcher;\n  }\n\n  setPage(page) {\n    this.pageDispatcher(emotions[page]);\n  }\n}\n\nconst sceneController = new SceneController();\n\nexport default sceneController;\n","export const colors = [\n  \"#ffbcb7\",\n  \"#21242d\",\n  \"#ea5158\",\n  \"#0d4663\",\n  \"#2d4a3e\",\n  \"#8bd8d2\"\n];\n\nexport const svgs = [\n  \"happy\",\n  \"sad\",\n  \"angry\",\n  \"surprise\",\n  \"calm\",\n  \"anticipated\"\n];\n","import { SVGLoader as loader } from \"three/examples/jsm/loaders/SVGLoader\";\nimport flatten from \"lodash-es/flatten\";\n\nimport { svgs } from \"../constants/arrays\";\n\nexport const paths = svgs\n  .map(\n    name =>\n      `https://raw.githubusercontent.com/doong-jo/irony-mechanical-analysis/master/src/resources/images/svg/sad.svg`\n  )\n  .map(\n    url =>\n      new Promise(resolve =>\n        new loader().load(url, shapes =>\n          resolve(\n            flatten(\n              shapes.paths.map((group, index) =>\n                group\n                  .toShapes(true)\n                  .map(shape => ({ shape, color: group.color, index }))\n              )\n            )\n          )\n        )\n      )\n  );\n","import * as THREE from \"three\";\nimport React, { useState, useEffect } from \"react\";\nimport { useTransition, useSpring, animated as a } from \"react-spring/three\";\n\nimport Shape from \"./Shape\";\nimport SceneController from \"../utils/sceneController\";\nimport { colors } from \"../constants/arrays\";\nimport { paths } from \"../utils/svg\";\n\nfunction Scene() {\n  const [page, setPage] = useState(0);\n  const [shapes, setShapes] = useState([]);\n\n  SceneController.setPageDispatcher(setPage);\n  useEffect(() => void paths[page].then(setShapes), [page]);\n\n  const { color } = useSpring({ color: colors[page] });\n  const transitions = useTransition(shapes, item => item.shape.uuid, {\n    from: {\n      rotation: [0.0, -Math.PI / 4, 0],\n      position: [0, 50, -200],\n      opacity: 0\n    },\n    enter: { rotation: [0, 0, 0], position: [0, 0, 0], opacity: 1 },\n    leave: { rotation: [0, 0.25, 0], position: [0, -50, 10], opacity: 0 },\n    order: [\"leave\", \"enter\", \"update\"],\n    trail: 5,\n    lazy: true\n  });\n  return (\n    <>\n      <mesh\n        scale={[20000, 20000, 1]}\n        rotation={[0, THREE.Math.degToRad(-20), 0]}\n      >\n        <planeGeometry attach=\"geometry\" args={[1, 1]} />\n        <a.meshPhongMaterial\n          attach=\"material\"\n          color={color}\n          depthTest={false}\n        />\n      </mesh>\n      <group\n        position={[1600, -700, page]}\n        rotation={[0, THREE.Math.degToRad(180), 0]}\n      >\n        {transitions.map(({ item, key, props }) => (\n          <Shape key={key} {...item} {...props} />\n        ))}\n      </group>\n    </>\n  );\n}\n\nexport default Scene;\n","export default [\n  {\n    name: \"엄마야 누나야\",\n    sentences: [\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 }\n    ]\n  }\n];\n","import { NLP_EMOTION, NLP_ENTITY } from \"../constants/string\";\n\nconst { REACT_APP_GOOGLE_API_SERVER_URL } = process.env;\n\nconst emotionApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/emotion?text=${text}`;\nconst entityApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/entity?text=${text}`;\n\nconsole.log(REACT_APP_GOOGLE_API_SERVER_URL);\n\nexport async function requestGoogleNlpApi(text, mode) {\n  let response;\n\n  switch (mode) {\n    case NLP_EMOTION:\n      response = await fetch(emotionApiUrl(text));\n      break;\n\n    case NLP_ENTITY:\n      response = await fetch(entityApiUrl(text));\n      break;\n\n    default:\n      return;\n  }\n\n  const json = await response.json();\n  return json;\n}\n","export const NLP_ENTITY = \"ENTITY\";\nexport const NLP_EMOTION = \"EMOTION\";\n\nexport const HAPPY = \"happy\";\nexport const SAD = \"sad\";\nexport const ANGRY = \"angry\";\nexport const SUPRISE = \"surprise\";\nexport const CALM = \"calm\";\nexport const ANTICIPATED = \"anticipated\";\n","import Songs from \"../constants/songs\";\nimport { NLP_EMOTION } from \"../constants/string\";\nimport { requestGoogleNlpApi } from \"../utils/googleApi\";\nimport sceneController from \"../utils/sceneController\";\nimport { getEmotion } from \"../utils/emotionAnalyzer\";\n\nclass MusicPlayer {\n  constructor() {\n    this.sentencesHand = 0;\n    this.songIndex = 0;\n    this.emotionsOfSongs = {};\n    this.subtitleDispatcher = null;\n  }\n\n  setSubTitleDispatcher(dispatcher) {\n    this.subtitleDispatcher = dispatcher;\n  }\n\n  flattenSentences({ sentences }) {\n    return sentences.map(({ content }) => `${content}. `).join(\"\");\n  }\n\n  async researchEmotion(songIndex) {\n    const { name } = Songs[songIndex];\n    if (this.emotionsOfSongs[name]) {\n      return;\n    }\n\n    const { sentences } = await requestGoogleNlpApi(\n      this.flattenSentences(Songs[songIndex]),\n      NLP_EMOTION\n    );\n    this.emotionsOfSongs[name] = sentences;\n  }\n\n  playIntervalCallback() {\n    this.sentencesHand++;\n    this.playInterval(this.songIndex);\n  }\n\n  playInterval(songIndex) {\n    this.songIndex = songIndex;\n\n    const { name, sentences } = Songs[songIndex];\n    if (this.sentencesHand === sentences.length) {\n      return;\n    }\n\n    const { content, length } = sentences[this.sentencesHand];\n    const { score } = this.emotionsOfSongs[name][this.sentencesHand];\n    const emotion = getEmotion(score);\n    sceneController.setPage(emotion);\n    this.subtitleDispatcher(content);\n\n    console.log(score);\n    console.log(\"emotion\", emotion);\n    console.log(name, content);\n\n    setTimeout(() => {\n      this.playIntervalCallback();\n    }, length);\n  }\n\n  async play(songIndex = 0) {\n    this.sentencesHand = 0;\n    await this.researchEmotion(songIndex);\n    this.playInterval(songIndex);\n  }\n}\n\nconst musicPlayer = new MusicPlayer();\n\nexport default musicPlayer;\n","import {\n  ANTICIPATED,\n  SUPRISE,\n  HAPPY,\n  CALM,\n  ANGRY,\n  SAD\n} from \"../constants/string\";\n\nexport function getEmotion(score) {\n  if (score >= 0.5) {\n    return HAPPY;\n  }\n\n  if (score >= 0.3) {\n    return SUPRISE;\n  }\n\n  if (score > 0) {\n    return ANTICIPATED;\n  }\n\n  if (score <= -0.5) {\n    return ANGRY;\n  }\n\n  if (score <= -0.3) {\n    return SAD;\n  }\n\n  if (score <= 0) {\n    return CALM;\n  }\n}\n","import React, { useState } from \"react\";\nimport { Dom } from \"react-three-fiber\";\nimport musicPlayer from \"../utils/musicPlayer\";\n\nfunction Subtitle() {\n  const [subtitle, setSubtitle] = useState(\"\");\n  musicPlayer.setSubTitleDispatcher(setSubtitle);\n\n  return (\n    <Dom position={[2000, -1900, 100]}>\n      <h1>{subtitle}</h1>\n    </Dom>\n  );\n}\n\nexport default Subtitle;\n","// Illustrations @ Tina Henschel: https://www.instagram.com/tina.henschel\n\nimport * as THREE from \"three\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Canvas } from \"react-three-fiber\";\n\nimport Scene from \"./components/Scene\";\nimport SubTitle from \"./components/Subtitle\";\n\nimport \"./styles.css\";\nimport musicPlayer from \"./utils/musicPlayer\";\n\nfunction App() {\n  musicPlayer.play();\n\n  return (\n    <Canvas\n      concurrent\n      camera={{\n        fov: 80,\n        position: [0, 0, 2000],\n        rotation: [0, THREE.Math.degToRad(-20), THREE.Math.degToRad(180)],\n        near: 0.1,\n        far: 20000\n      }}\n    >\n      <ambientLight intensity={0.5} />\n      <spotLight intensity={0.5} position={[300, 300, 4000]} />\n      <SubTitle />\n      <Scene />\n    </Canvas>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}