{"version":3,"sources":["constants/songs.js","utils/googleApi.js","constants/string.js","constants/object.js","utils/sceneController.js","utils/musicPlayer.js","utils/emotionAnalyzer.js","components/Character/style.js","components/Character/index.js","components/Playlist/style.js","components/Playlist/index.js","components/Shape.js","constants/arrays.js","utils/svg.js","components/Scene.js","components/Subtitle.js","index.js"],"names":["name","sentences","content","length","emotionApiUrl","text","process","entityApiUrl","requestGoogleNlpApi","mode","a","fetch","response","json","console","log","emotions","happy","sad","angry","surprise","calm","anticipated","sceneController","this","pageDispatcher","charDispatcher","dispatcher","page","emotion","musicPlayer","sentencesHand","playTimeout","songIndex","emotionsOfSongs","subtitleDispatcher","playIndexDispatcher","map","join","Songs","flattenSentences","playInterval","songs","play","score","getEmotion","setPage","setTimeout","playIntervalCallback","researchEmotion","clearTimeout","Wrapper","styled","div","props","position","left","top","Character","useState","setEmotion","setCharDispatcher","width","height","sprite","shouldAnimate","fps","startFrame","stopLastFrame","Container","SongWrapper","currentPlayIndex","Playlist","list","playIndex","setPlayIndex","setPlayIndexDispatcher","songName","index","key","onClick","playByIndex","Shape","shape","rotation","color","opacity","mesh","interpolate","x","y","z","meshPhongMaterial","attach","side","THREE","depthWrite","transparent","args","colors","paths","url","Promise","resolve","loader","load","shapes","flatten","group","toShapes","Scene","setShapes","SceneController","setPageDispatcher","useEffect","then","useSpring","transitions","useTransition","item","uuid","from","Math","PI","enter","leave","order","trail","lazy","scale","degToRad","depthTest","Subtitle","subtitle","setSubtitle","setSubTitleDispatcher","ReactDOM","render","concurrent","camera","fov","near","far","intensity","song","document","getElementById"],"mappings":"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","file":"static/js/main.eb3a93d9.chunk.js","sourcesContent":["export default [\n  {\n    name: \"엄마야 누나야\",\n    sentences: [\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 }\n    ]\n  },\n  {\n    name: \"섬집아가\",\n    sentences: [{ content: \"섬집아가 가사 테스트\", length: 2000 }]\n  }\n];\n","import { NLP_EMOTION, NLP_ENTITY } from \"../constants/string\";\n\nconst { REACT_APP_GOOGLE_API_SERVER_URL } = process.env;\n\nconst emotionApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/emotion?text=${text}`;\nconst entityApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/entity?text=${text}`;\n\nconsole.log(REACT_APP_GOOGLE_API_SERVER_URL);\n\nexport async function requestGoogleNlpApi(text, mode) {\n  let response;\n\n  switch (mode) {\n    case NLP_EMOTION:\n      response = await fetch(emotionApiUrl(text));\n      break;\n\n    case NLP_ENTITY:\n      response = await fetch(entityApiUrl(text));\n      break;\n\n    default:\n      return;\n  }\n\n  const json = await response.json();\n  return json;\n}\n","export const NLP_ENTITY = \"ENTITY\";\nexport const NLP_EMOTION = \"EMOTION\";\n\nexport const HAPPY = \"happy\";\nexport const SAD = \"sad\";\nexport const ANGRY = \"angry\";\nexport const SUPRISE = \"surprise\";\nexport const CALM = \"calm\";\nexport const ANTICIPATED = \"anticipated\";\n","export const emotions = {\n  happy: 0,\n  sad: 1,\n  angry: 2,\n  surprise: 3,\n  calm: 4,\n  anticipated: 5\n};\n","import { emotions } from \"../constants/object\";\n\nclass SceneController {\n  constructor() {\n    this.pageDispatcher = null;\n    this.charDispatcher = null;\n  }\n\n  setPageDispatcher(dispatcher) {\n    this.pageDispatcher = dispatcher;\n  }\n\n  setCharDispatcher(dispatcher) {\n    this.charDispatcher = dispatcher;\n  }\n\n  setPage(page) {\n    if (this.pageDispatcher) {\n      const emotion = emotions[page];\n\n      this.pageDispatcher(emotion);\n      this.charDispatcher(\"heart\" || page);\n    }\n  }\n}\n\nconst sceneController = new SceneController();\n\nexport default sceneController;\n","import Songs from \"../constants/songs\";\nimport { NLP_EMOTION } from \"../constants/string\";\nimport { requestGoogleNlpApi } from \"../utils/googleApi\";\nimport sceneController from \"../utils/sceneController\";\nimport { getEmotion } from \"../utils/emotionAnalyzer\";\nimport songs from \"../constants/songs\";\n\nclass MusicPlayer {\n  constructor() {\n    this.sentencesHand = 0;\n    this.playTimeout = null;\n    this.songIndex = 0;\n    this.emotionsOfSongs = {};\n    this.subtitleDispatcher = null;\n    this.playIndexDispatcher = null;\n  }\n\n  setSubTitleDispatcher(dispatcher) {\n    this.subtitleDispatcher = dispatcher;\n  }\n\n  setPlayIndexDispatcher(dispatcher) {\n    this.playIndexDispatcher = dispatcher;\n  }\n\n  flattenSentences({ sentences }) {\n    return sentences.map(({ content }) => `${content}. `).join(\"\");\n  }\n\n  async researchEmotion(songIndex) {\n    const { name } = Songs[songIndex];\n    if (this.emotionsOfSongs[name]) {\n      return;\n    }\n\n    const { sentences } = await requestGoogleNlpApi(\n      this.flattenSentences(Songs[songIndex]),\n      NLP_EMOTION\n    );\n    this.emotionsOfSongs[name] = sentences;\n  }\n\n  playIntervalCallback() {\n    this.sentencesHand++;\n    this.playInterval(this.songIndex);\n  }\n\n  playInterval(songIndex) {\n    this.songIndex = songIndex;\n\n    let { name, sentences } = Songs[songIndex];\n    if (this.sentencesHand === sentences.length) {\n      this.songIndex = (this.songIndex + 1) % songs.length;\n      this.play(this.songIndex);\n      return;\n    }\n\n    const { content, length } = sentences[this.sentencesHand];\n    const { score } = this.emotionsOfSongs[name][this.sentencesHand];\n    const emotion = getEmotion(score);\n    sceneController.setPage(emotion);\n    this.subtitleDispatcher(content);\n\n    this.playTimeout = setTimeout(() => {\n      this.playIntervalCallback();\n    }, length);\n  }\n\n  async play(songIndex = 0) {\n    this.sentencesHand = 0;\n    await this.researchEmotion(songIndex);\n    this.playInterval(songIndex);\n    this.playIndexDispatcher(songIndex);\n  }\n\n  playByIndex(songIndex) {\n    clearTimeout(this.playTimeout);\n    this.play(songIndex);\n  }\n}\n\nconst musicPlayer = new MusicPlayer();\n\nexport default musicPlayer;\n","import {\n  ANTICIPATED,\n  SUPRISE,\n  HAPPY,\n  CALM,\n  ANGRY,\n  SAD\n} from \"../constants/string\";\n\nexport function getEmotion(score) {\n  if (score >= 0.5) {\n    return HAPPY;\n  }\n\n  if (score >= 0.3) {\n    return SUPRISE;\n  }\n\n  if (score > 0) {\n    return ANTICIPATED;\n  }\n\n  if (score <= -0.5) {\n    return ANGRY;\n  }\n\n  if (score <= -0.3) {\n    return SAD;\n  }\n\n  if (score <= 0) {\n    return CALM;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  left: ${props => props.position.left};\n  top: ${props => props.position.top};\n`;\n","import React, { useState } from \"react\";\nimport SpriteAnimator from \"react-sprite-animator\";\n\nimport * as S from \"./style\";\nimport sceneController from \"../../utils/sceneController\";\n\nfunction Character({ position }) {\n  const [emotion, setEmotion] = useState();\n  sceneController.setCharDispatcher(setEmotion);\n\n  return (\n    <S.Wrapper position={position}>\n      <SpriteAnimator\n        width={36}\n        height={36}\n        sprite={`images/sprite/${emotion}.svg`}\n        shouldAnimate={true}\n        fps={60}\n        startFrame={0}\n        stopLastFrame={false}\n      />\n    </S.Wrapper>\n  );\n}\n\nexport default Character;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  left: 5%;\n  top: 70%;\n  width: max-content;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SongWrapper = styled.div`\n  border-bottom: ${props =>\n    props.currentPlayIndex ? \"2px solid #111\" : \"2px solid transparent\"};\n  text-align: center;\n  padding: 4px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\n\nimport * as S from \"./style\";\nimport musicPlayer from \"../../utils/musicPlayer\";\n\nfunction Playlist({ currentPlayIndex, list }) {\n  const [playIndex, setPlayIndex] = useState(currentPlayIndex);\n  musicPlayer.setPlayIndexDispatcher(setPlayIndex);\n\n  return (\n    <S.Container>\n      {list.map((songName, index) => (\n        <S.SongWrapper\n          currentPlayIndex={index === playIndex}\n          key={`${songName}_${index}`}\n          onClick={() => {\n            musicPlayer.playByIndex(index);\n          }}\n        >\n          {songName}\n        </S.SongWrapper>\n      ))}\n    </S.Container>\n  );\n}\n\nexport default Playlist;\n","import * as THREE from \"three\";\nimport React from \"react\";\nimport { animated as a } from \"react-spring/three\";\n\nfunction Shape({ shape, rotation, position, color, opacity, index }) {\n  return (\n    <a.mesh\n      rotation={rotation}\n      position={position.interpolate((x, y, z) => [x, y, z + -index * 50])}\n    >\n      <a.meshPhongMaterial\n        attach=\"material\"\n        color={color}\n        opacity={opacity}\n        side={THREE.DoubleSide}\n        depthWrite={false}\n        transparent\n      />\n      <shapeBufferGeometry attach=\"geometry\" args={[shape]} />\n    </a.mesh>\n  );\n}\n\nexport default Shape;\n","export const colors = [\n  \"#ffbcb7\",\n  \"#21242d\",\n  \"#ea5158\",\n  \"#0d4663\",\n  \"#2d4a3e\",\n  \"#8bd8d2\"\n];\n\nexport const svgs = [\n  \"happy\",\n  \"sad\",\n  \"angry\",\n  \"surprise\",\n  \"calm\",\n  \"anticipated\"\n];\n","import { SVGLoader as loader } from \"three/examples/jsm/loaders/SVGLoader\";\nimport flatten from \"lodash-es/flatten\";\n\nimport { svgs } from \"../constants/arrays\";\n\nexport const paths = svgs\n  .map(\n    name =>\n      `https://raw.githubusercontent.com/doong-jo/irony-mechanical-analysis/master/public/images/svg/sad1.svg`\n    // name =>\n    //   `https://raw.githubusercontent.com/doong-jo/irony-mechanical-analysis/master/src/resources/images/svg/${name +\n    //     (Math.random() > 0.5 ? 1 : 2)}.svg`\n  )\n  .map(\n    url =>\n      new Promise(resolve =>\n        new loader().load(url, shapes =>\n          resolve(\n            flatten(\n              shapes.paths.map((group, index) =>\n                group\n                  .toShapes(true)\n                  .map(shape => ({ shape, color: group.color, index }))\n              )\n            )\n          )\n        )\n      )\n  );\n","import * as THREE from \"three\";\nimport React, { useState, useEffect } from \"react\";\nimport { useTransition, useSpring, animated as a } from \"react-spring/three\";\n\nimport Shape from \"./Shape\";\nimport SceneController from \"../utils/sceneController\";\nimport { colors } from \"../constants/arrays\";\nimport { paths } from \"../utils/svg\";\n\nfunction Scene() {\n  const [page, setPage] = useState(0);\n  const [shapes, setShapes] = useState([]);\n\n  SceneController.setPageDispatcher(setPage);\n  useEffect(() => void paths[page].then(setShapes), [page]);\n\n  const { color } = useSpring({ color: colors[page] });\n  const transitions = useTransition(shapes, item => item.shape.uuid, {\n    from: {\n      rotation: [0.0, -Math.PI / 4, 0],\n      position: [0, 50, -200],\n      opacity: 0\n    },\n    enter: { rotation: [0, 0, 0], position: [0, 0, 0], opacity: 1 },\n    leave: { rotation: [0, 0.25, 0], position: [0, -50, 10], opacity: 0 },\n    order: [\"leave\", \"enter\", \"update\"],\n    trail: 5,\n    lazy: true\n  });\n  return (\n    <>\n      <mesh\n        scale={[20000, 20000, 1]}\n        rotation={[0, THREE.Math.degToRad(-20), 0]}\n      >\n        <planeGeometry attach=\"geometry\" args={[1, 1]} />\n        <a.meshPhongMaterial\n          attach=\"material\"\n          color={color}\n          depthTest={false}\n        />\n      </mesh>\n      <group\n        position={[1600, -700, page]}\n        rotation={[0, THREE.Math.degToRad(180), 0]}\n      >\n        {transitions.map(({ item, key, props }) => (\n          <Shape key={key} {...item} {...props} />\n        ))}\n      </group>\n    </>\n  );\n}\n\nexport default Scene;\n","import React, { useState } from \"react\";\nimport { Dom } from \"react-three-fiber\";\nimport musicPlayer from \"../utils/musicPlayer\";\n\nfunction Subtitle() {\n  const [subtitle, setSubtitle] = useState(\"\");\n  musicPlayer.setSubTitleDispatcher(setSubtitle);\n\n  return (\n    <Dom position={[2000, -1900, 100]}>\n      <h1>{subtitle}</h1>\n    </Dom>\n  );\n}\n\nexport default Subtitle;\n","// Illustrations @ Tina Henschel: https://www.instagram.com/tina.henschel\n\nimport * as THREE from \"three\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Canvas } from \"react-three-fiber\";\n\nimport \"./styles.css\";\nimport songs from \"./constants/songs\";\nimport musicPlayer from \"./utils/musicPlayer\";\nimport { Scene, Subtitle, Playlist, Character } from \"./components\";\n\nfunction App() {\n  musicPlayer.play();\n\n  return (\n    <>\n      <Canvas\n        concurrent\n        camera={{\n          fov: 80,\n          position: [0, 0, 2000],\n          rotation: [0, THREE.Math.degToRad(-20), THREE.Math.degToRad(180)],\n          near: 0.1,\n          far: 20000\n        }}\n      >\n        <ambientLight intensity={0.1} />\n        <spotLight intensity={0.5} position={[300, 300, 4000]} />\n        <Subtitle />\n        <Scene />\n      </Canvas>\n      <Playlist currentPlayIndex={0} list={songs.map(song => song.name)} />\n      <Character position={{ left: \"30%\", top: \"70%\" }} />\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}