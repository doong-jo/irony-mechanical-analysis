{"version":3,"sources":["constants/songs.js","utils/googleApi.js","constants/string.js","constants/object.js","utils/sceneController.js","utils/musicPlayer.js","utils/emotionAnalyzer.js","components/Character/style.js","components/Character/index.js","components/Playlist/style.js","components/Playlist/index.js","components/Shape.js","constants/arrays.js","utils/svg.js","components/Scene.js","components/Subtitle.js","components/Emotion/style.js","components/Emotion/index.js","index.js"],"names":["name","sentences","content","length","emotionApiUrl","text","process","entityApiUrl","requestGoogleNlpApi","mode","a","fetch","response","json","console","log","emotions","happy","sad","angry","surprise","calm","anticipated","sceneController","this","pageDispatcher","charDispatcher","emotionDispatcher","dispatcher","emotionName","pageIndex","musicPlayer","sentencesHand","playTimeout","songIndex","emotionsOfSongs","subtitleDispatcher","playIndexDispatcher","map","join","Songs","flattenSentences","playInterval","songs","play","emotion","score","getEmotion","setPage","setTimeout","playIntervalCallback","researchEmotion","clearTimeout","Wrapper","styled","div","props","position","left","top","Character","useState","setEmotion","setCharDispatcher","width","height","sprite","shouldAnimate","fps","startFrame","stopLastFrame","Container","SongWrapper","currentPlayIndex","Playlist","list","playIndex","setPlayIndex","setPlayIndexDispatcher","songName","index","key","onClick","playByIndex","Shape","shape","rotation","color","opacity","mesh","interpolate","x","y","z","meshPhongMaterial","attach","side","THREE","depthWrite","transparent","args","colors","paths","url","Promise","resolve","loader","load","shapes","indexId","befId","flatten","group","curId","userData","node","id","toShapes","Scene","page","setShapes","SceneController","setPageDispatcher","useEffect","then","useSpring","transitions","useTransition","item","uuid","from","Math","PI","enter","leave","order","trail","lazy","scale","degToRad","depthTest","Subtitle","subtitle","setSubtitle","setSubTitleDispatcher","Emotion","setEmotionDispatcher","ReactDOM","render","concurrent","camera","fov","near","far","intensity","song","document","getElementById"],"mappings":"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","file":"static/js/main.9fbcfb35.chunk.js","sourcesContent":["export default [\n  {\n    name: \"엄마야 누나야\",\n    sentences: [\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 2000 },\n      { content: \"뜰에는 반짝이는 금모래빛\", length: 4000 },\n      { content: \"뒷문밖에는 갈잎의 노래\", length: 6000 },\n      { content: \"엄마야 누나야 강변 살자\", length: 8000 }\n    ]\n  },\n  {\n    name: \"섬집아가\",\n    sentences: [{ content: \"섬집아가 가사 테스트\", length: 2000 }]\n  }\n];\n","import { NLP_EMOTION, NLP_ENTITY } from \"../constants/string\";\n\nconst { REACT_APP_GOOGLE_API_SERVER_URL } = process.env;\n\nconst emotionApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/emotion?text=${text}`;\nconst entityApiUrl = text =>\n  `${REACT_APP_GOOGLE_API_SERVER_URL}/api/gcp-lang/entity?text=${text}`;\n\nconsole.log(REACT_APP_GOOGLE_API_SERVER_URL);\n\nexport async function requestGoogleNlpApi(text, mode) {\n  let response;\n\n  switch (mode) {\n    case NLP_EMOTION:\n      response = await fetch(emotionApiUrl(text));\n      break;\n\n    case NLP_ENTITY:\n      response = await fetch(entityApiUrl(text));\n      break;\n\n    default:\n      return;\n  }\n\n  const json = await response.json();\n  return json;\n}\n","export const NLP_ENTITY = \"ENTITY\";\nexport const NLP_EMOTION = \"EMOTION\";\n\nexport const HAPPY = \"happy\";\nexport const SAD = \"sad\";\nexport const ANGRY = \"angry\";\nexport const SUPRISE = \"surprise\";\nexport const CALM = \"calm\";\nexport const ANTICIPATED = \"anticipated\";\n","export const emotions = {\n  happy: 0,\n  sad: 1,\n  angry: 2,\n  surprise: 3,\n  calm: 4,\n  anticipated: 5\n};\n","import { emotions } from \"../constants/object\";\n\nclass SceneController {\n  constructor() {\n    this.pageDispatcher = null;\n    this.charDispatcher = null;\n    this.emotionDispatcher = null;\n  }\n\n  setPageDispatcher(dispatcher) {\n    this.pageDispatcher = dispatcher;\n  }\n\n  setCharDispatcher(dispatcher) {\n    this.charDispatcher = dispatcher;\n  }\n\n  setEmotionDispatcher(dispatcher) {\n    this.emotionDispatcher = dispatcher;\n  }\n\n  setPage(emotionName) {\n    if (this.pageDispatcher && this.charDispatcher && this.emotionDispatcher) {\n      const pageIndex = emotions[emotionName];\n\n      this.pageDispatcher(pageIndex);\n      // heart => test svg image\n      this.charDispatcher(\"heart\" || emotionName);\n      this.emotionDispatcher(emotionName);\n    }\n  }\n}\n\nconst sceneController = new SceneController();\n\nexport default sceneController;\n","import Songs from \"../constants/songs\";\nimport { NLP_EMOTION } from \"../constants/string\";\nimport { requestGoogleNlpApi } from \"../utils/googleApi\";\nimport sceneController from \"../utils/sceneController\";\nimport { getEmotion } from \"../utils/emotionAnalyzer\";\nimport songs from \"../constants/songs\";\n\nclass MusicPlayer {\n  constructor() {\n    this.sentencesHand = 0;\n    this.playTimeout = null;\n    this.songIndex = 0;\n    this.emotionsOfSongs = {};\n    this.subtitleDispatcher = null;\n    this.playIndexDispatcher = null;\n  }\n\n  setSubTitleDispatcher(dispatcher) {\n    this.subtitleDispatcher = dispatcher;\n  }\n\n  setPlayIndexDispatcher(dispatcher) {\n    this.playIndexDispatcher = dispatcher;\n  }\n\n  flattenSentences({ sentences }) {\n    return sentences.map(({ content }) => `${content}. `).join(\"\");\n  }\n\n  async researchEmotion(songIndex) {\n    const { name } = Songs[songIndex];\n    if (this.emotionsOfSongs[name]) {\n      return;\n    }\n\n    const { sentences } = await requestGoogleNlpApi(\n      this.flattenSentences(Songs[songIndex]),\n      NLP_EMOTION\n    );\n    this.emotionsOfSongs[name] = sentences;\n  }\n\n  playIntervalCallback() {\n    this.sentencesHand++;\n    this.playInterval(this.songIndex);\n  }\n\n  playInterval(songIndex) {\n    this.songIndex = songIndex;\n\n    let { name, sentences } = Songs[songIndex];\n    if (this.sentencesHand === sentences.length) {\n      this.songIndex = (this.songIndex + 1) % songs.length;\n      this.play(this.songIndex);\n      return;\n    }\n\n    const { content, length } = sentences[this.sentencesHand];\n    const { score } = this.emotionsOfSongs[name][this.sentencesHand];\n    const emotion = getEmotion(score);\n    sceneController.setPage(emotion);\n    this.subtitleDispatcher(content);\n\n    this.playTimeout = setTimeout(() => {\n      this.playIntervalCallback();\n    }, length);\n  }\n\n  async play(songIndex = 0) {\n    this.sentencesHand = 0;\n    await this.researchEmotion(songIndex);\n    this.playInterval(songIndex);\n    this.playIndexDispatcher(songIndex);\n  }\n\n  playByIndex(songIndex) {\n    clearTimeout(this.playTimeout);\n    this.play(songIndex);\n  }\n}\n\nconst musicPlayer = new MusicPlayer();\n\nexport default musicPlayer;\n","import {\n  ANTICIPATED,\n  SUPRISE,\n  HAPPY,\n  CALM,\n  ANGRY,\n  SAD\n} from \"../constants/string\";\n\nexport function getEmotion(score) {\n  if (score >= 0.5) {\n    return HAPPY;\n  }\n\n  if (score >= 0.3) {\n    return SUPRISE;\n  }\n\n  if (score > 0) {\n    return ANTICIPATED;\n  }\n\n  if (score <= -0.5) {\n    return ANGRY;\n  }\n\n  if (score <= -0.3) {\n    return SAD;\n  }\n\n  if (score <= 0) {\n    return CALM;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  left: ${props => props.position.left};\n  top: ${props => props.position.top};\n`;\n","import React, { useState } from \"react\";\nimport SpriteAnimator from \"react-sprite-animator\";\n\nimport * as S from \"./style\";\nimport sceneController from \"../../utils/sceneController\";\n\nfunction Character({ position }) {\n  const [emotion, setEmotion] = useState();\n  sceneController.setCharDispatcher(setEmotion);\n\n  return (\n    <S.Wrapper position={position}>\n      <SpriteAnimator\n        width={36}\n        height={36}\n        sprite={`images/sprite/${emotion}.svg`}\n        shouldAnimate={true}\n        fps={60}\n        startFrame={0}\n        stopLastFrame={false}\n      />\n    </S.Wrapper>\n  );\n}\n\nexport default Character;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: fixed;\n  left: ${props => props.position.left};\n  top: ${props => props.position.top};\n  width: max-content;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SongWrapper = styled.div`\n  border-bottom: ${props =>\n    props.currentPlayIndex ? \"2px solid #111\" : \"2px solid transparent\"};\n  text-align: center;\n  padding: 4px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\n\nimport * as S from \"./style\";\nimport musicPlayer from \"../../utils/musicPlayer\";\n\nfunction Playlist({ currentPlayIndex, list, position }) {\n  const [playIndex, setPlayIndex] = useState(currentPlayIndex);\n  musicPlayer.setPlayIndexDispatcher(setPlayIndex);\n\n  return (\n    <S.Container position={position}>\n      {list.map((songName, index) => (\n        <S.SongWrapper\n          currentPlayIndex={index === playIndex}\n          key={`${songName}_${index}`}\n          onClick={() => {\n            musicPlayer.playByIndex(index);\n          }}\n        >\n          {songName}\n        </S.SongWrapper>\n      ))}\n    </S.Container>\n  );\n}\n\nexport default Playlist;\n","import * as THREE from \"three\";\nimport React from \"react\";\nimport { animated as a } from \"react-spring/three\";\n\nfunction Shape({ shape, rotation, position, color, opacity, index }) {\n  return (\n    <a.mesh\n      rotation={rotation}\n      position={position.interpolate((x, y, z) => [x, y, z + -index * 50])}\n    >\n      <a.meshPhongMaterial\n        attach=\"material\"\n        color={color}\n        opacity={opacity}\n        side={THREE.DoubleSide}\n        depthWrite={false}\n        transparent\n      />\n      <shapeBufferGeometry attach=\"geometry\" args={[shape]} />\n    </a.mesh>\n  );\n}\n\nexport default Shape;\n","export const colors = [\n  \"#ffbcb7\",\n  \"#21242d\",\n  \"#ea5158\",\n  \"#0d4663\",\n  \"#2d4a3e\",\n  \"#8bd8d2\",\n  \"#ffbcb7\",\n  \"#21242d\",\n  \"#ea5158\",\n  \"#0d4663\",\n  \"#2d4a3e\",\n  \"#8bd8d2\"\n];\n\nexport const svgs = [\n  \"happy1\",\n  \"happy2\",\n  \"sad1\",\n  \"sad2\",\n  \"angry1\",\n  \"angry2\",\n  \"surprise1\",\n  \"surprise2\",\n  \"calm1\",\n  \"calm2\",\n  \"anticipated1\",\n  \"anticipated2\"\n];\n","import { SVGLoader as loader } from \"three/examples/jsm/loaders/SVGLoader\";\nimport flatten from \"lodash-es/flatten\";\n\nimport { svgs } from \"../constants/arrays\";\n\nexport const paths = svgs\n  .map(\n    name => `./images/svg/sad1.svg`\n    // `https://raw.githubusercontent.com/doong-jo/irony-mechanical-analysis/master/public/images/svg/sad1.svg`\n    // name =>\n    //   `https://raw.githubusercontent.com/doong-jo/irony-mechanical-analysis/master/src/resources/images/svg/${name +\n    //     (Math.random() > 0.5 ? 1 : 2)}.svg`\n  )\n  .map(\n    url =>\n      new Promise(resolve =>\n        new loader().load(url, shapes => {\n          let indexId = 0;\n          let befId = 0;\n\n          return resolve(\n            flatten(\n              shapes.paths.map(group => {\n                const curId = group.userData.node.id;\n                if (curId === \"\" || curId !== befId) {\n                  indexId++;\n                }\n                befId = curId;\n\n                return group.toShapes(true).map(shape => ({\n                  shape,\n                  color: group.color,\n                  index: indexId\n                }));\n              })\n            )\n          );\n        })\n      )\n  );\n","import * as THREE from \"three\";\nimport React, { useState, useEffect } from \"react\";\nimport { useTransition, useSpring, animated as a } from \"react-spring/three\";\n\nimport Shape from \"./Shape\";\nimport SceneController from \"../utils/sceneController\";\nimport { colors } from \"../constants/arrays\";\nimport { paths } from \"../utils/svg\";\n\nfunction Scene() {\n  const [page, setPage] = useState(0);\n  const [shapes, setShapes] = useState([]);\n\n  SceneController.setPageDispatcher(setPage);\n  useEffect(() => void paths[page].then(setShapes), [page]);\n\n  const { color } = useSpring({ color: colors[page] });\n  const transitions = useTransition(shapes, item => item.shape.uuid, {\n    from: {\n      rotation: [0.0, -Math.PI / 4, 0],\n      position: [0, 50, -200],\n      opacity: 0\n    },\n    enter: { rotation: [0, 0, 0], position: [0, 0, 0], opacity: 1 },\n    leave: { rotation: [0, 0.25, 0], position: [0, -50, 10], opacity: 0 },\n    order: [\"leave\", \"enter\", \"update\"],\n    trail: 5,\n    lazy: true\n  });\n  return (\n    <>\n      <mesh\n        scale={[20000, 20000, 1]}\n        rotation={[0, THREE.Math.degToRad(-20), 0]}\n      >\n        <planeGeometry attach=\"geometry\" args={[1, 1]} />\n        <a.meshPhongMaterial\n          attach=\"material\"\n          color={color}\n          depthTest={false}\n        />\n      </mesh>\n      <group\n        position={[1600, -700, page]}\n        rotation={[0, THREE.Math.degToRad(180), 0]}\n      >\n        {transitions.map(({ item, key, props }) => (\n          <Shape key={key} {...item} {...props} />\n        ))}\n      </group>\n    </>\n  );\n}\n\nexport default Scene;\n","import React, { useState } from \"react\";\nimport { Dom } from \"react-three-fiber\";\nimport musicPlayer from \"../utils/musicPlayer\";\n\nfunction Subtitle() {\n  const [subtitle, setSubtitle] = useState(\"\");\n  musicPlayer.setSubTitleDispatcher(setSubtitle);\n\n  return (\n    <Dom position={[2000, -1900, 100]}>\n      <h1>{subtitle}</h1>\n    </Dom>\n  );\n}\n\nexport default Subtitle;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: fixed;\n  left: ${props => props.position.left};\n  top: ${props => props.position.top};\n\n  color: black;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import React, { useState } from \"react\";\n\nimport * as S from \"./style\";\nimport sceneController from \"../../utils/sceneController\";\n\nfunction Emotion({ position }) {\n  const [emotion, setEmotion] = useState(\"\");\n  sceneController.setEmotionDispatcher(setEmotion);\n\n  return <S.Wrapper position={position}>{emotion}</S.Wrapper>;\n}\n\nexport default Emotion;\n","// Illustrations @ Tina Henschel: https://www.instagram.com/tina.henschel\n\nimport * as THREE from \"three\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Canvas } from \"react-three-fiber\";\n\nimport \"./styles.css\";\nimport songs from \"./constants/songs\";\nimport musicPlayer from \"./utils/musicPlayer\";\nimport { Scene, Subtitle, Playlist, Character, Emotion } from \"./components\";\n\nfunction App() {\n  musicPlayer.play();\n\n  return (\n    <>\n      <Canvas\n        concurrent\n        camera={{\n          fov: 80,\n          position: [0, 0, 2000],\n          rotation: [0, THREE.Math.degToRad(-20), THREE.Math.degToRad(180)],\n          near: 0.1,\n          far: 20000\n        }}\n      >\n        <ambientLight intensity={0.1} />\n        <spotLight intensity={0.5} position={[300, 300, 4000]} />\n        <Subtitle />\n        <Scene />\n      </Canvas>\n      <Playlist\n        position={{ left: \"7%\", top: \"70%\" }}\n        currentPlayIndex={0}\n        list={songs.map(song => song.name)}\n      />\n      <Character position={{ left: \"50%\", top: \"60%\" }} />\n      <Emotion position={{ left: \"7%\", top: \"50%\" }} />\n    </>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}